name: E2E Smoke on main

permissions:
  contents: read
  deployments: write
  statuses: write
  checks: write

on:
  push:
    branches: [ "main" ]

concurrency:
  group: pages-prod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-matrix:
    name: E2E Smoke – ${{ matrix.browser }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    env:
      BASE_URL: ${{ secrets.SMOKE_BASE_URL }}
      CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID_SMOKE }}
      CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET_SMOKE }}
      TEST_LOGIN_TOKEN: ${{ secrets.TEST_LOGIN_TOKEN }}
      JUNIT_FILE: junit/junit-${{ matrix.browser }}.xml
      PLAYWRIGHT_HTML_REPORT: playwright-report-${{ matrix.browser }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci
      - name: Access preflight (two-hop HEAD; tolerate canonical/https; allow Access on hop 1–2)
        env:
          CF_ACCESS_CLIENT_ID_SMOKE:     ${{ secrets.CF_ACCESS_CLIENT_ID_SMOKE }}
          CF_ACCESS_CLIENT_SECRET_SMOKE: ${{ secrets.CF_ACCESS_CLIENT_SECRET_SMOKE }}
          SMOKE_BASE_URL:                ${{ secrets.SMOKE_BASE_URL }}
        run: |
          set -euo pipefail
          URL="${SMOKE_BASE_URL%/}/"

          # 1) Unauthenticated: expect 30x to Access login; allow one canonical/https hop first
          hop1_code=$(curl -s -o /dev/null -w "%{http_code}\n" -I "$URL")
          hop1_loc=$(curl -s -I "$URL" | awk -F': ' 'BEGIN{IGNORECASE=1}/^location:/ {print $2}' | tr -d '\r\n')
          echo "HOP1 (no token) -> $hop1_code $hop1_loc"
          if echo "$hop1_loc" | grep -Eqi '^https?://'; then
            hop2_code=$(curl -s -o /dev/null -w "%{http_code}\n" -I "$hop1_loc")
            hop2_loc=$(curl -s -I "$hop1_loc" | awk -F': ' 'BEGIN{IGNORECASE=1}/^location:/ {print $2}' | tr -d '\r\n')
            echo "HOP2 (no token) -> $hop2_code $hop2_loc"
            if ! echo "$hop2_loc" | grep -qi "/cdn-cgi/access/login"; then
              echo "Expected Access login redirect on hop 1 or 2"; exit 1
            fi
          else
            if ! echo "$hop1_loc" | grep -qi "/cdn-cgi/access/login"; then
              echo "Expected Access login redirect on hop 1"; exit 1
            fi
          fi

          # 2) With token: allow 200/204, or 3xx not pointing to Access login
          code=$(curl -s -o /dev/null -w "%{http_code}\n" -I \
            -H "CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID_SMOKE" \
            -H "CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET_SMOKE" \
            "$URL")
          loc=$(curl -s -I \
            -H "CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID_SMOKE" \
            -H "CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET_SMOKE" \
            "$URL" | awk -F': ' 'BEGIN{IGNORECASE=1}/^location:/ {print $2}' | tr -d '\r\n')
          echo "WITH TOKEN -> $code $loc"
          case "$code" in
            200|204) exit 0 ;;
            301|302|307|308)
              if echo "$loc" | grep -qi "/cdn-cgi/access/login"; then
                echo "Service token not accepted (still redirect to Access login)."; exit 1
              fi
              ;;
            *) echo "Unexpected status with token: $code"; exit 1 ;;
          esac
      - run: npx playwright install --with-deps
      - name: Run Playwright (${{ matrix.browser }})
        run: npx playwright test --project=${{ matrix.browser }} --config=tests/e2e/playwright.config.ts
      - name: Upload JUnit (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.browser }}
          path: ${{ env.JUNIT_FILE }}
          retention-days: 7
      - name: Upload HTML report (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: ${{ env.PLAYWRIGHT_HTML_REPORT }}
          retention-days: 7

  junit-summary:
    name: E2E Smoke on main – Summary
    needs: e2e-matrix
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: junit-*
          path: junit-merged
      - name: Publish JUnit summary (main)
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'junit-merged/**.xml'
          check_name: 'E2E Smoke on main – Summary'
          require_tests: true
          include_passed: true
          detailed_summary: true
