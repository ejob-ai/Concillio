name: E2E Smoke (main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read

concurrency:
  group: pages-prod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e_smoke:
    name: E2E Smoke (main)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    env:
      MATRIX_BROWSER: ${{ matrix.browser }}
      JUNIT_FILE: junit/junit-${{ matrix.browser }}.xml
      HTML_DIR: playwright-report-${{ matrix.browser }}
      BASE_URL: ${{ secrets.SMOKE_BASE_URL }}
      TEST_CONTEXT: "smoke"
      CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID_SMOKE }}
      CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET_SMOKE }}
      TEST_LOGIN_TOKEN: ${{ secrets.TEST_LOGIN_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install deps & browsers
        run: |
          set -euo pipefail
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npx playwright install --with-deps

      - name: Ensure report dirs
        run: mkdir -p junit

      - name: Access preflight (two-hop)
        env:
          BASE_URL: ${{ env.BASE_URL }}
          CF_ACCESS_CLIENT_ID_SMOKE: ${{ secrets.CF_ACCESS_CLIENT_ID_SMOKE }}
          CF_ACCESS_CLIENT_SECRET_SMOKE: ${{ secrets.CF_ACCESS_CLIENT_SECRET_SMOKE }}
        shell: bash
        run: |
          set -euo pipefail
          probe() { curl -s -I -o /dev/null -D - "$1" | awk 'BEGIN{c="";l=""} tolower($1) ~ /^http\// {c=$2} tolower($1)=="location:" {l=$2} END{printf "%s %s", c, l}'; }
          normalize(){ base="$1"; loc="$2"; if [[ "$loc" =~ ^https?:// ]]; then printf "%s" "$loc"; elif [[ "$loc" =~ ^/ ]]; then origin="$(printf "%s" "$base" | sed -E 's#^([a-z]+://[^/]+).*#\1#I')"; printf "%s%s" "$origin" "$loc"; else printf "%s" "$base"; fi; }
          url="${BASE_URL:-}"
          if [[ -z "$url" ]]; then echo "Secret SMOKE_BASE_URL (BASE_URL) is not set"; exit 1; fi
          read -r code1 loc1 <<<"$(probe "$url")"; echo "hop1: $code1 $loc1"
          lower1="$(printf "%s" "$loc1" | tr '[:upper:]' '[:lower:]')"
          if [[ "$code1" =~ ^(200|204)$ ]]; then echo "200/204 on first hop – OK"; exit 0; fi
          if [[ "$code1" =~ ^(301|302|303|308)$ ]]; then
            if [[ "$lower1" == *"/cdn-cgi/access/login"* ]]; then echo "Access login on first hop – OK"; exit 0; fi
            next="$(normalize "$url" "$loc1")"; read -r code2 loc2 <<<"$(probe "$next")"; echo "hop2: $code2 $loc2"
            lower2="$(printf "%s" "$loc2" | tr '[:upper:]' '[:lower:]')"
            if [[ "$code2" =~ ^(200|204)$ ]]; then echo "Canonical/HTTPS redirect → 200 – OK"; exit 0; fi
            if [[ "$code2" =~ ^(301|302|303|308)$ && "$lower2" == *"/cdn-cgi/access/login"* ]]; then echo "Access login on second hop – OK"; exit 0; fi
          fi
          if [[ -n "${CF_ACCESS_CLIENT_ID_SMOKE:-}" && -n "${CF_ACCESS_CLIENT_SECRET_SMOKE:-}" ]]; then
            echo "=== Authenticated probe ==="
            read -r codeA locA <<<"$(curl -s -I -o /dev/null -D - \
              -H \"CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID_SMOKE\" \
              -H \"CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET_SMOKE\" \
              \"$url\" | awk 'BEGIN{c="";l=""} tolower($1) ~ /^http\\// {c=$2} tolower($1)==\"location:\" {l=$2} END{printf \"%s %s\", c, l}')"
            echo "auth: $codeA $locA"
            if [[ "$codeA" =~ ^(200|204)$ ]]; then echo "Authenticated 200/204 – OK"; exit 0; fi
          fi
          echo "Preflight failed. Expected 200/204, HTTPS/canonical → 200, or Access login redirect; got: hop1=$code1 loc1=$loc1"
          exit 1

      - name: Run Playwright (smoke)
        run: |
          set -euo pipefail
          npx playwright test tests/smoke*.spec.ts --project="${{ matrix.browser }}" --config="playwright.config.ts"

      - name: Upload JUnit & HTML reports (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: |
            ${{ env.JUNIT_FILE }}
            ${{ env.HTML_DIR }}
          retention-days: 7
          if-no-files-found: warn

      - name: Publish E2E summary (${{ matrix.browser }})
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          echo "### E2E (${{ matrix.browser }})" >> "$GITHUB_STEP_SUMMARY"
          if [ -f "junit/junit-${{ matrix.browser }}.xml" ]; then
            echo "JUnit: junit/junit-${{ matrix.browser }}.xml" >> "$GITHUB_STEP_SUMMARY"
          fi
          if [ -d "playwright-report-${{ matrix.browser }}" ]; then
            echo "HTML report: playwright-report-${{ matrix.browser }}" >> "$GITHUB_STEP_SUMMARY"
          fi

  summary:
    name: E2E Smoke on main – Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [e2e_smoke]
    steps:
      - name: Summarize matrix
        shell: bash
        run: |
          echo "### E2E Smoke on main – Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "- Matrix result: ${{ needs.e2e_smoke.result }}" >> "$GITHUB_STEP_SUMMARY"
      - name: Fail if matrix not green
        if: needs.e2e_smoke.result != 'success'
        run: |
          echo "::error::Smoke matrix failed (result=${{ needs.e2e_smoke.result }})"
          exit 1
