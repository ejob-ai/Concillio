name: Update STATUS timestamp

permissions:
  contents: write

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [update-status-timestamp]

jobs:
  bump:
    # inga extra guards behövs – endast manuellt eller via repository_dispatch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: true
          fetch-depth: 0

      # IMPORTANT: Switch to 'status' branch BEFORE editing files
      - name: Switch to 'status' branch (create if missing)
        shell: bash
        run: |
          set -euo pipefail
          git fetch origin status || true
          if git ls-remote --exit-code --heads origin status >/dev/null 2>&1; then
            git checkout -B status origin/status
          else
            # Create status branch from current ref (main)
            git checkout -B status
          fi

      - name: Write TIMESTAMP, STATUS.md and Shields endpoint JSON
        shell: bash
        run: |
          set -euo pipefail
          TS="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          mkdir -p status

          # 1) Maskinläsbar tidsstämpel
          echo "$TS" > status/TIMESTAMP

          # 2) (valfri) status-sida för repo-visibility
          cat > STATUS.md <<'MD'
          # Concilio — Build & Deploy status
          Denna sida uppdateras automatiskt av `.github/workflows/status-timestamp.yml` efter lyckade CI-körningar (eller vid manuell körning).
          **Badge** läser från `status.json` på `status`-branchen.
          MD

          # 3) Shields endpoint enligt schemaVersion 1 (best practice)
          jq -n --arg ts "$TS" '{
            schemaVersion: 1,
            label: "deploy",
            message: ("ok (" + $ts + ")"),
            color: "green",
            cacheSeconds: 300
          }' > status/status.json

          # Git-commit till status-branchen (säkert, utan historik-reset)
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Hämta ev. remote-branch info (utan att ändra working tree)
          git fetch origin status:refs/remotes/origin/status || true

          # Växla till status-branchen på ett säkert sätt
          if git show-ref --verify --quiet refs/heads/status; then
            # Lokal branch finns – uppdatera ff-only från remote om remote finns
            git switch status
            if git show-ref --verify --quiet refs/remotes/origin/status; then
              git pull --ff-only origin status
            fi
          else
            if git ls-remote --exit-code origin status >/dev/null 2>&1; then
              # Skapa lokal tracking-branch från origin/status
              git switch -c status --track origin/status
            else
              # Förstakörning: skapa ny lokal status-branch
              git switch -c status
            fi
          fi

          git add status/TIMESTAMP STATUS.md status/status.json
          git commit -m "chore(status): update TIMESTAMP + shields endpoint" || echo "No changes to commit"
          git push --set-upstream origin status
