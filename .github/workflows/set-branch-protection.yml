name: Configure branch protection (main & status)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  protect:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

    steps:
      - name: Show gh version
        run: gh --version

      # --- MAIN: set protection (RAW JSON) ---
      - name: Protect "main" (require preview JUnit check; allow Actions bypass)
        run: |
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/branches/main/protection \
            --input - <<'JSON'
          {
            "required_status_checks": { "strict": true, "contexts": ["E2E (preview) – Summary"] },
            "enforce_admins": true,
            "required_pull_request_reviews": null,
            "restrictions": null,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "block_creations": false,
            "required_linear_history": false,
            "lock_branch": false,
            "bypass_pull_request_allowances": { "users": [], "teams": [], "apps": ["github-actions"] }
          }
          JSON

      - name: Verify "main" protection (read-back)
        run: |
          echo "::group::Branch protection (main)"
          gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/branches/main/protection \
          | jq '{required_status_checks: .required_status_checks,
                 enforce_admins: .enforce_admins,
                 bypass_pull_request_allowances: .bypass_pull_request_allowances}'
          echo "::endgroup::"

      - name: Assert "main" protection (with diff)
        shell: bash
        run: |
          set -euo pipefail
          CHECK_NAME='E2E (preview) – Summary'  # OBS: en-dash

          ACT_RAW="$(gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/branches/main/protection)"
          ACT_CANON="$(echo "$ACT_RAW" | jq -S '{
            required_status_checks:
              (if .required_status_checks==null
                then null
                else { strict: .required_status_checks.strict,
                       contexts: (.required_status_checks.contexts // []) }
               end),
            enforce_admins:
              (if (.enforce_admins|type)=="boolean"
                then .enforce_admins
                else (.enforce_admins.enabled // false)
               end),
            required_pull_request_reviews: .required_pull_request_reviews,
            restrictions: .restrictions,
            allow_force_pushes: .allow_force_pushes,
            allow_deletions: .allow_deletions,
            block_creations: .block_creations,
            required_linear_history: .required_linear_history,
            lock_branch: .lock_branch,
            bypass_pull_request_allowances:
              { users: ((.bypass_pull_request_allowances.users // []) | map(.login // .slug // .)),
                teams: ((.bypass_pull_request_allowances.teams // []) | map(.slug // .name // .)),
                apps:  ((.bypass_pull_request_allowances.apps  // []) | map(.slug // .name // .)) }
          }')"

          EXP_CANON="$(jq -n -S --arg check "$CHECK_NAME" '{
            required_status_checks: { strict: true, contexts: [$check] },
            enforce_admins: true,
            required_pull_request_reviews: null,
            restrictions: null,
            allow_force_pushes: false,
            allow_deletions: false,
            block_creations: false,
            required_linear_history: false,
            lock_branch: false,
            bypass_pull_request_allowances: { users: [], teams: [], apps: ["github-actions"] }
          }')"

          if [[ "$ACT_CANON" != "$EXP_CANON" ]]; then
            echo "::error::Branch protection for main differs from expected."
            echo "----- EXPECTED -----"
            echo "$EXP_CANON" | jq .
            echo "----- ACTUAL -----"
            echo "$ACT_CANON" | jq .
            echo "----- DIFF -----"
            diff -u <(echo "$EXP_CANON") <(echo "$ACT_CANON") || true
            exit 1
          fi
          echo "Main protection matches expected ✔"

      # --- STATUS: set protection (RAW JSON) ---
      - name: Protect "status" (allow Actions bypass; no required checks)
        run: |
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/branches/status/protection \
            --input - <<'JSON'
          {
            "required_status_checks": null,
            "enforce_admins": true,
            "required_pull_request_reviews": null,
            "restrictions": null,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "block_creations": false,
            "required_linear_history": false,
            "lock_branch": false,
            "bypass_pull_request_allowances": { "users": [], "teams": [], "apps": ["github-actions"] }
          }
          JSON

      - name: Verify "status" protection (read-back)
        run: |
          echo "::group::Branch protection (status)"
          gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/branches/status/protection \
          | jq '{required_status_checks: .required_status_checks,
                 enforce_admins: .enforce_admins,
                 bypass_pull_request_allowances: .bypass_pull_request_allowances}'
          echo "::endgroup::"

      - name: Assert "status" protection (with diff)
        shell: bash
        run: |
          set -euo pipefail
          ACT_RAW="$(gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/branches/status/protection)"
          ACT_CANON="$(echo "$ACT_RAW" | jq -S '{
            required_status_checks:
              (if .required_status_checks==null
                then null
                else { strict: .required_status_checks.strict,
                       contexts: (.required_status_checks.contexts // []) }
               end),
            enforce_admins:
              (if (.enforce_admins|type)=="boolean"
                then .enforce_admins
                else (.enforce_admins.enabled // false)
               end),
            required_pull_request_reviews: .required_pull_request_reviews,
            restrictions: .restrictions,
            allow_force_pushes: .allow_force_pushes,
            allow_deletions: .allow_deletions,
            block_creations: .block_creations,
            required_linear_history: .required_linear_history,
            lock_branch: .lock_branch,
            bypass_pull_request_allowances:
              { users: ((.bypass_pull_request_allowances.users // []) | map(.login // .slug // .)),
                teams: ((.bypass_pull_request_allowances.teams // []) | map(.slug // .name // .)),
                apps:  ((.bypass_pull_request_allowances.apps  // []) | map(.slug // .name // .)) }
          }')"

          EXP_CANON="$(jq -n -S '{
            required_status_checks: null,
            enforce_admins: true,
            required_pull_request_reviews: null,
            restrictions: null,
            allow_force_pushes: false,
            allow_deletions: false,
            block_creations: false,
            required_linear_history: false,
            lock_branch: false,
            bypass_pull_request_allowances: { users: [], teams: [], apps: ["github-actions"] }
          }')"

          if [[ "$ACT_CANON" != "$EXP_CANON" ]]; then
            echo "::error::Branch protection for status differs from expected."
            echo "----- EXPECTED -----"
            echo "$EXP_CANON" | jq .
            echo "----- ACTUAL -----"
            echo "$ACT_CANON" | jq .
            echo "----- DIFF -----"
            diff -u <(echo "$EXP_CANON") <(echo "$ACT_CANON") || true
            exit 1
          fi
          echo "Status protection matches expected ✔"
