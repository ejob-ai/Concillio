name: E2E Sessions (preview)

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

concurrency:
  group: e2e-sessions-preview-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  preview:
    name: Deploy PR Preview
    if: >
      github.event_name != 'pull_request' ||
      (!github.event.pull_request.head.repo.fork && github.actor != 'dependabot[bot]')
    runs-on: ubuntu-latest
    outputs:
      pages_url: ${{ steps.resolve.outputs.pages_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Build (SSR)
        run: npm run build

      - name: Deploy to Cloudflare Pages (PR)
        id: pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: concillio
          directory: dist
          wranglerVersion: "3.78.0"
          wranglerCommand: "pages deploy"

      - name: Resolve preview URL
        id: resolve
        run: |
          echo "pages_url=${{ steps.pages.outputs.url }}" >> "$GITHUB_OUTPUT"

  e2e:
    name: Run Playwright (sessions only)
    needs: preview
    if: >
      github.event_name != 'pull_request' ||
      (!github.event.pull_request.head.repo.fork && github.actor != 'dependabot[bot]')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Get Playwright version
        id: pw
        run: echo "version=$(npx --yes playwright --version | awk '{print $2}')" >> "$GITHUB_OUTPUT"

      - name: Cache Playwright browsers
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.pw.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright OS deps (always)
        run: npx playwright install-deps

      - name: Install Playwright browsers (on cache miss)
        if: steps.cache.outputs.cache-hit != 'true'
        run: npx playwright install

      - name: Prepare junit dir
        run: mkdir -p junit

      - name: Run Playwright sessions test
        env:
          TEST_CONTEXT: preview
          PREVIEW_URL: ${{ needs.preview.outputs.pages_url }}
          BASE_URL: ${{ needs.preview.outputs.pages_url }}
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
        run: |
          set -euo pipefail
          rm -rf node_modules/@vitest/expect node_modules/vitest || true
          npx playwright test tests/sessions.e2e.spec.ts --config="playwright.config.ts" --project="${{ matrix.browser }}"

      - name: Upload JUnit & HTML reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-sessions-${{ matrix.browser }}
          path: |
            junit
            playwright-report
          retention-days: 7

  summary:
    name: E2E Sessions (preview) – Summary
    needs: [preview, e2e]
    if: ${{ always() && needs.preview.result != 'skipped' }}
    runs-on: ubuntu-latest
    steps:
      - name: Write summary
        run: |
          echo "## E2E Sessions (preview) summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Preview: **${{ needs.preview.result }}**" >> $GITHUB_STEP_SUMMARY
          echo "- E2E: **${{ needs.e2e.result }}**" >> $GITHUB_STEP_SUMMARY

  summary_policy:
    name: E2E Sessions (preview) – Summary (policy)
    if: ${{ github.event_name == 'pull_request' && (github.event.pull_request.head.repo.fork || github.actor == 'dependabot[bot]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Policy summary
        run: |
          echo "## E2E Sessions (preview) – policy skip" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Preview deploy/E2E är **skippade** för forks eller Dependabot-PR:er för att inte exponera secrets. Detta är förväntat." >> $GITHUB_STEP_SUMMARY
