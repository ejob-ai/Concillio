name: Deploy + Checks + E2E

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    concurrency:
      group: concillio-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      deployments: write
    env:
      NODE_VERSION: '20'
      PROJECT_NAME: concillio

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install deps
        run: npm ci

      # âœ… Fail-fast: kÃ¶r JSDOM/Vitest innan vi bygger
      - name: Unit: menu.js DOM toggle (Vitest + JSDOM)
        run: npm run test:unit

      - name: Build
        run: npm run build

      # âœ… Officiell Pages-action (ger url/environment)
      - name: Deploy to Cloudflare Pages
        id: pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.PROJECT_NAME }}
          directory: dist
          branch: ${{ github.ref_name }}
          wranglerVersion: '3'

      - name: Resolve BASE_URL
        run: |
          echo "BASE_URL=${{ steps.pages.outputs.url }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ steps.pages.outputs.environment }}" >> $GITHUB_ENV

      # âœ… Deploy checks mot samma deployment (preview/prod)
      - name: Deploy checks
        env:
          BASE_URL: ${{ env.BASE_URL }}
          EXPECT_TEST_HELPERS: ${{ env.ENVIRONMENT == 'preview' && 'on' || 'off' }}
          TEST_LOGIN_TOKEN: ${{ env.ENVIRONMENT == 'preview' && secrets.TEST_LOGIN_TOKEN || '' }}
        run: ./scripts/deploy-check.sh

      # âœ… E2E fÃ¶rst efter att deploy-checks passerat
      # Preview: kÃ¶r E2E med token (positiva tester aktiva)
      - name: E2E: Billing flows (preview)
        if: env.ENVIRONMENT == 'preview'
        environment: preview
        env:
          BASE_URL: ${{ env.BASE_URL }}
          TEST_LOGIN_TOKEN: ${{ secrets.TEST_LOGIN_TOKEN }}
        run: |
          npx playwright install --with-deps
          npm run test:e2e

      # Prod: kÃ¶r E2E utan token (positiva testet skippar snyggt)
      - name: E2E: Billing flows (prod)
        if: env.ENVIRONMENT != 'preview'
        environment: production
        env:
          BASE_URL: ${{ env.BASE_URL }}
        run: |
          npx playwright install --with-deps
          npm run test:e2e

      # ðŸ“Ž Artifacts vid fel
      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore

      - name: Upload Playwright traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results/
          if-no-files-found: ignore
