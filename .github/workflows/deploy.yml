name: Deploy + Checks + E2E

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # (ingen environment här – vi avgör senare om det blev preview eller production)
    outputs:
      base_url: ${{ steps.resolve.outputs.base_url }}
      environment: ${{ steps.resolve.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Unit tests (Vitest)
        run: npm run test:unit

      - name: Build
        run: npm run build

      - name: Deploy to Cloudflare Pages
        id: pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: concillio
          directory: dist
          branch: ${{ github.ref_name }}
          wranglerVersion: '3'

      - name: Resolve BASE_URL / ENVIRONMENT
        id: resolve
        run: |
          echo "base_url=${{ steps.pages.outputs.url }}" >> $GITHUB_OUTPUT
          echo "environment=${{ steps.pages.outputs.environment }}" >> $GITHUB_OUTPUT

      - name: Deploy checks
        env:
          BASE_URL: ${{ steps.resolve.outputs.base_url }}
          EXPECT_TEST_HELPERS: ${{ steps.resolve.outputs.environment == 'preview' && 'on' || 'off' }}
          TEST_LOGIN_TOKEN: ${{ steps.resolve.outputs.environment == 'preview' && secrets.TEST_LOGIN_TOKEN || '' }}
        run: ./scripts/deploy-check.sh

  e2e-preview:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: needs.build-and-deploy.outputs.environment == 'preview'
    environment: preview
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: E2E: Billing flows (preview)
        env:
          BASE_URL: ${{ needs.build-and-deploy.outputs.base_url }}
          TEST_LOGIN_TOKEN: ${{ secrets.TEST_LOGIN_TOKEN }}
        run: npm run test:e2e

      - name: Upload artifacts (on fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-preview
          path: |
            playwright-report
            test-results

  e2e-production:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: needs.build-and-deploy.outputs.environment == 'production'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: E2E: Billing flows (prod)
        env:
          BASE_URL: ${{ needs.build-and-deploy.outputs.base_url }}
        run: npm run test:e2e

      - name: Upload artifacts (on fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-prod
          path: |
            playwright-report
            test-results
