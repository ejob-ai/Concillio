name: E2E (preview)

permissions:
  contents: read
  checks: write

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - chore/preview-validation-2025-09-26
  workflow_dispatch:

concurrency:
  group: pages-preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    outputs:
      pages_url: ${{ steps.resolve_url.outputs.url }}
    steps:
      - uses: actions/checkout@v4

      - name: Locate project root (force repo root)
        id: root
        shell: bash
        run: |
          set -euo pipefail
          echo "root=." >> "$GITHUB_OUTPUT"
          echo "Using repo root as canonical Node project dir"

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ steps.root.outputs.root }}/package-lock.json

      - name: Install deps & browsers
        working-directory: ${{ steps.root.outputs.root }}
        run: |
          set -euo pipefail
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npx playwright install --with-deps

        # Playwright behöver sina browsers i CI
      # - name: Skip: browsers already installed
      #   run: echo "Browsers were installed in the previous step"

      - name: Build
        working-directory: ${{ steps.root.outputs.root }}
        run: npm run build

      - name: Publish to Cloudflare Pages
        id: pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken:    ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId:   ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: concillio
          directory:   ${{ steps.root.outputs.root }}/dist
          wranglerVersion: "3.*"

      - name: Resolve preview URL
        id: resolve_url
        run: |
          url="${{ steps.pages.outputs.alias || steps.pages.outputs.url }}"
          # normalisera trailing slash
          url="${url%/}/"
          echo "url=$url" >> "$GITHUB_OUTPUT"

      # OBLIGATORISK för interna PR:er – HEAD + Location-semantik
      - name: Access preflight (HEAD + Location check, preview)
        if: ${{ github.event_name == 'pull_request' && (
                github.event.pull_request.head.repo.full_name == github.repository ||
                github.event.pull_request.head.repo.owner.login == github.repository_owner
             ) }}
        env:
          PREVIEW_URL: ${{ steps.resolve_url.outputs.url }}
        shell: bash
        run: |
          set -euo pipefail
          # Tillåt 301/302/303 -> /cdn-cgi/access/login (absolut eller relativ Location)
          # Hämta ENDAST första svaret (ingen -L)
          read -r code loc_hdr < <(
            curl -sI "$PREVIEW_URL" \
            | awk 'BEGIN{IGNORECASE=1} /^HTTP/{c=$2} /^location:/{l=$2} END{print c, l}' \
            | tr -d "\r"
          )
          if [[ "$code" =~ ^30[123]$ ]] && [[ "$loc_hdr" == *"/cdn-cgi/access/login"* ]]; then
            echo "Access preflight OK (unauthenticated 30x to login)"
          else
            echo "Expected unauthenticated 30x -> /cdn-cgi/access/login, got: $code $loc_hdr"
            exit 1
          fi

          # (valfritt) Auth-probe kan ligga kvar som innan om ni vill
          # read -r code_auth loc_auth <<<"$(
          #   curl -sI "$u" \
          #     -H "CF-Access-Client-Id: ${{ secrets.CF_ACCESS_CLIENT_ID }}" \
          #     -H "CF-Access-Client-Secret: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}" \
          #   | awk 'BEGIN{c="";l=""}/^HTTP\//{c=$2}tolower($1)=="location:"{l=$2}END{printf "%s %s", c, l}'
          # )"
          # [[ "$code_auth" =~ ^20[04]$ || -z "$loc_auth" ]] && echo "Auth OK ($code_auth $loc_auth)" || { echo "Unexpected redirect while authenticated: $code_auth $loc_auth"; exit 1; }

  e2e:
    name: E2E (preview)
    needs: preview
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    env:
      BASE_URL:               ${{ needs.preview.outputs.pages_url }}
      JUNIT_FILE:             junit/junit-${{ matrix.browser }}.xml
      PLAYWRIGHT_HTML_REPORT: playwright-report-${{ matrix.browser }}
      CF_ACCESS_CLIENT_ID:     ${{ secrets.CF_ACCESS_CLIENT_ID }}
      CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
      TEST_LOGIN_TOKEN:        ${{ secrets.TEST_LOGIN_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Locate project root (force repo root)
        id: root
        shell: bash
        run: |
          set -euo pipefail
          echo "root=." >> "$GITHUB_OUTPUT"
          echo "Using repo root as canonical Node project dir"

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ steps.root.outputs.root }}/package-lock.json

      - name: Install deps & browsers
        working-directory: ${{ steps.root.outputs.root }}
        run: |
          set -euo pipefail
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npx playwright install --with-deps

      - name: Run Playwright (${{ matrix.browser }})
        working-directory: ${{ steps.root.outputs.root }}
        env:
          BASE_URL:               ${{ needs.preview.outputs.pages_url }}
          CF_ACCESS_CLIENT_ID:     ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
          TEST_LOGIN_TOKEN:        ${{ secrets.TEST_LOGIN_TOKEN }}
          TEST_CONTEXT: preview
        run: |
          set -euo pipefail
          CONFIG="$GITHUB_WORKSPACE/playwright.config.ts"
          echo "Using config: $CONFIG"
          ls -l "$CONFIG"
          npx playwright test \
            --project=${{ matrix.browser }} \
            --config="$CONFIG"

      - name: Upload JUnit (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.browser }}
          path: junit/junit-${{ matrix.browser }}.xml
          if-no-files-found: ignore

      - name: Upload HTML report (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report-${{ matrix.browser }}
          if-no-files-found: ignore

  junit-summary:
    name: JUnit (preview) – Summary
    needs: e2e
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: junit-merged
      - uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'junit-merged/**/*.xml'
          check_name: 'E2E (preview) – Summary'
          fail_on_failure: false
          include_passed: true
