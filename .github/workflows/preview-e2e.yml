name: E2E (preview)

on:
  pull_request:
    paths-ignore:
      - 'STATUS.md'
      - 'status.json'

permissions:
  contents: read
  checks: write

concurrency:
  group: pages-preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    outputs:
      pages_url: ${{ steps.pages.outputs.alias || steps.pages.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Build
        run: |
          npm ci
          npm run build

      - name: Publish to Cloudflare Pages
        id: pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken:      ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId:     ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName:   concillio
          directory:     dist
          branch:        ${{ github.ref_name }}
          wranglerVersion: '>=3.74.0'

      # Interna PR: Access-preflight HEAD + Location (forks hoppar över automatiskt)
      - name: Access preflight (HEAD + Location check, preview)
        if: ${{ github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork }}
        env:
          URL:                     ${{ steps.pages.outputs.alias || steps.pages.outputs.url }}
          CF_ACCESS_CLIENT_ID:     ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
        run: |
          set -euo pipefail
          u="${URL%/}/"

          # 1) Utan token: förvänta 302 till /cdn-cgi/access/login
          code=$(curl -s -o /dev/null -w "%{http_code}" -I "$u" || true)
          loc=$(curl -s -I "$u" | awk -F': ' 'tolower($1)=="location"{print $2}' | tr -d '\r')
          if [ "$code" != "302" ] || ! echo "$loc" | grep -q "/cdn-cgi/access/login"; then
            echo "Expected 302 -> /cdn-cgi/access/login without token, got $code -> $loc"; exit 1
          fi

          # 2) Secrets måste finnas för interna PR
          if [ -z "${CF_ACCESS_CLIENT_ID:-}" ] || [ -z "${CF_ACCESS_CLIENT_SECRET:-}" ]; then
            echo "Missing CF_ACCESS_* secrets for internal PR"; exit 1
          fi

          # 3) Med token: OK om 200/204 eller 3xx som INTE går till login
          code=$(curl -s -o /dev/null -w "%{http_code}" -I \
            -H "CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID" \
            -H "CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET" "$u")
          loc=$(curl -s -I \
            -H "CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID" \
            -H "CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET" "$u" | awk -F': ' 'tolower($1)=="location"{print $2}' | tr -d '\r')

          if [ "$code" = "200" ] || [ "$code" = "204" ]; then
            exit 0
          fi
          if [ "${code:0:1}" = "3" ] && ! echo "$loc" | grep -q "/cdn-cgi/access/login"; then
            exit 0
          fi
          echo "Access preflight failed ($code -> $loc)"; exit 1

  e2e:
    needs: preview
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    env:
      BASE_URL:               ${{ needs.preview.outputs.pages_url }}
      JUNIT_FILE:             junit/junit-${{ matrix.browser }}.xml
      PLAYWRIGHT_HTML_REPORT: playwright-report-${{ matrix.browser }}
      CF_ACCESS_CLIENT_ID:     ${{ secrets.CF_ACCESS_CLIENT_ID }}
      CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
      TEST_LOGIN_TOKEN:        ${{ secrets.TEST_LOGIN_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps & browsers
        run: |
          npm ci
          npx playwright install --with-deps
      - name: Run Playwright (${{ matrix.browser }})
        run: npx playwright test tests/e2e/preview-validation.spec.ts --project=${{ matrix.browser }} --config=playwright.config.ts
      - name: Upload JUnit (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.browser }}
          path: junit/junit-${{ matrix.browser }}.xml
          if-no-files-found: warn
      - name: Upload HTML report (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report-${{ matrix.browser }}
          if-no-files-found: warn

  junit-summary:
    needs: e2e
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: junit-*
          merge-multiple: true
          path: junit
      - name: Publish JUnit summary
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'junit/*.xml'
          check_name: 'E2E (preview) – Summary'
          require_tests: true
          include_passed: true
          detailed_summary: true
